services:
  postgres_db:
    image: postgres:15
    hostname: postgres_db
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: prisma
    ports:
      - '5432:5432'
    networks:
      - prisma-network
    volumes:
      - ./server/db:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d postgres']
      interval: 5s
      timeout: 2s
      retries: 20

  redis:
    image: redis:8-alpine
    hostname: redis
    container_name: redis
    command:
      ['redis-server', '--appendonly', 'yes', '--requirepass', 'redispass']
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - prisma-network

  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '4000:4000'
    stdin_open: true
    tty: true # Keeps the container running for debugging
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - server/.env.production.local
    networks:
      - prisma-network
    volumes:
      - ./server/files:/usr/src/app/server/files

  prisma-studio:
    image: node:lts-alpine
    working_dir: /usr/src/app
    volumes:
      - ./server:/usr/src/app
    command: npx prisma studio --port 5555 --browser none
    ports:
      - '5555:5555'
    env_file:
      - server/.env.production.local
    networks:
      - prisma-network
    depends_on:
      postgres_db:
        condition: service_healthy
      server:
        condition: service_started

volumes:
  redis-data:

networks:
  prisma-network:
    name: prisma-network
